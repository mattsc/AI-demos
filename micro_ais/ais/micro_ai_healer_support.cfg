#textdomain wesnoth

#define MICRO_AI_HEALER_SUPPORT
    [ai]
        id=healer_support
        description="Healer Support Micro AI"
        version=10710
        [engine]
            name="lua"
            code= <<
                local ai = ...
                return wesnoth.require("~add-ons/AI-demos/micro_ais/ais/micro_ai_healer_support.lua").init(ai)
            >>
        [/engine]
        [stage]
            id=main_loop
            name=testing_ai_default::candidate_action_evaluation_loop
            {AI_CA_GOTO}
            {AI_CA_RECRUITMENT}
            {AI_CA_MOVE_LEADER_TO_GOALS}
            {AI_CA_MOVE_LEADER_TO_KEEP}
            {AI_CA_COMBAT}
            {AI_CA_HEALING}
            {AI_CA_VILLAGES}
            {AI_CA_RETREAT}
            {AI_CA_MOVE_TO_TARGETS}
            {AI_CA_PASSIVE_LEADER_SHARES_KEEP}
            [candidate_action]
                engine=lua
                name=initialize_healer_support
                evaluation="return (...):initialize_healer_support_eval()"
                execution="(...):initialize_healer_support_exec()"
            [/candidate_action]
            [candidate_action]
                engine=lua
                name=healers_can_attack
                evaluation="return (...):healers_can_attack_eval()"
                execution="(...):healers_can_attack_exec()"
            [/candidate_action]
            [candidate_action]
                engine=lua
                name=healer_support
                evaluation="return (...):healer_support_eval()"
                execution="(...):healer_support_exec()"
            [/candidate_action]
        [/stage]
    [/ai]
#enddef