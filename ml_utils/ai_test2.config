[default]
path_to_wesnoth_binary=/Applications/Wesnoth1.11.app/Contents/MacOS/Wesnoth
arguments_to_wesnoth_binary=--log-info=ai/testing,mp/connect/engine --nogui --multiplayer --controller 1:ai --controller 2:ai --parm 1:village_gold:2 --parm 2:village_gold:2
# Number of test you want to run
number_of_tests=100
# Force a timeout after max_run_time seconds
max_run_time=300
# AI Configuration for sides 1 and 2
# Note that ai/dev/default_ai_with_recruit_log.cfg is the same as the default ai/ais/ai_default_rca.cfg except that
# the former will write out a complete recruitment log.
ai_config1=~add-ons/AI-demos/ais/ml_ai.cfg
ai_config2=ai/dev/default_ai_with_recruit_log.cfg
# If the below are left blank, factions will be selected randomly.  Note that one can be filled in and one can be blank
# so that you can test one faction against all other factions.
faction1=Northerners
faction2="Knalgan Alliance"
faction1=
faction2=
# model_directory is the directory in which the ML Recruiter models can be found.  It defaults to ~add-ons/AI-demos/models/
model_directory=
# if single_model is set to "true", then Wesnoth will be using a single model which has been trained to work on all factions
# and it will expect to find this in the data/ai/models/all/ directory.  If single_model is not set, then it looks for
# a model specifically trained for this side's faction in data/ai/models/[faction]/.  Currently, the faction-specific
# models are performing better by a slight margin (c. 52% - 48% win ratio)
single_model1=
single_model2=
# model is the name of the .json neural net file.  By default, it looks for default_gold_yield_2vc.json in the faction or "all" directory
model1=
model2=
# The standard WeightedRandom version of ML Recruiter first uses the neural net to compute the expected value of the metric.
# Then it divides that metric by the cost for the unit.  Then it raises that unit to metric_cost_power and randomly chooses
# a unit with a probability proportionate to (metric/cost) ** metric_cost_power.
# Hence higher values of metric_cost_power will make it more likely to choose the unit it thinks is best.  Lower values
# will tend towards more of a random distribution.  If metric_cost_power = 0, then the choice is completely random.
# Default value is 6 for ml_ai.cfg and 24 for ml_ai_less_random.cfg
metric_cost_power1=
metric_cost_power2=
# log file contains stuff like who won and on what turn
log_file=stats__release_%Y_%B_%d_%A_%I-%M%p.log
# feature_file is used by ML Recruiter.  Will be ignored by RCA_AI.  It stores information or "features" relevant to the
# decision to recruit each recruited unit.
feature_file=feature__release_%Y_%B_%d_%A_%I-%M%p.csv
# It will randomly choose one of the following four maps each iteration
map1=multiplayer_Weldyn_Channel
map2=multiplayer_The_Freelands
map3=multiplayer_Den_of_Onis
map4=multiplayer_Fallenstar_Lake
map5=multiplayer_Aethermaw
map6=multiplayer_Arcanclave_Citadel
map7=multiplayer_Cynsaun_Battlefield
map8=multiplayer_elensefar_courtyard
map9=multiplayer_Hamlets
map10=multiplayer_Howling_Ghost_Badlands
map11=multiplayer_Sablestone_Delta
map12=multiplayer_Silverhead_Crossing
map13=multiplayer_Sullas_Ruins
map14=multiplayer_Hornshark_Island
map15=multiplayer_Basilisk
map16=multiplayer_thousand_stings_garrison
#map17=multiplayer_2p_Dark_Forecast         # This is a survival scenario, not a standard "kill the enemy leader scenario"
# There is currently (as of Wesnoth 1.11.0) a bug in which the amount of gold for a side defaults to 0 unless the map
# specifies a gold amount.  The below two parameters specify the gold override put into the command line and which maps
# should not have gold overridden.  This is an interim solution until the bug is fixed.
gold_override=--parm 1:gold:100 --parm 2:gold:100
#
maps_where_gold_should_not_be_overridden=multiplayer_Arcanclave_Citadel,multiplayer_Cynsaun_Battlefield,multiplayer_Aethermaw,multiplayer_elensefar_courtyard,multiplayer_Hornshark_Island, multiplayer_thousand_stings_garrison
# If this is set to false, side 1 is always 1 and side 2 is always 2.  Otherwise the sides are randomly switched.
# Set this to false, pick only one map, and specify both factions if you want to use this for regression tests
randomly_choose_sides=true
