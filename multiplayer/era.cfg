[era]
    id=AI_Demos
    name= _ "Default+Experimental AI"

    {~add-ons/AI-demos/ais/ai_generic-rush.cfg}
    {~add-ons/AI-demos/ais/ai_grunt-rush-Freelands-S1.cfg}
    {RANDOM_SIDE}
    {multiplayer/factions/loyalists-default.cfg}
    {multiplayer/factions/rebels-default.cfg}
    {multiplayer/factions/northerners-default.cfg}
    {multiplayer/factions/undead-default.cfg}
    {multiplayer/factions/knalgans-default.cfg}
    {multiplayer/factions/drakes-default.cfg}
    {QUICK_4MP_LEADERS}

    # Some events to be fired from within the AI's
    [event]
        name=start

        # Set this for all games, so that it can be retrieved later from savegames
        {VARIABLE AI_Demos_version "{~/add-ons/AI-demos/version.txt}"}
        [lua]
            code = <<
                local GRH = wesnoth.require "~/add-ons/AI-demos/lua/grunt_rush_helper.lua"
                GRH.GRFLS1_hello()
            >>
        [/lua]
    [/event]

    [event]
        name=die
        [filter]
            canrecruit=yes
        [/filter]

        [lua]
            code = <<
                local GRH = wesnoth.require "~/add-ons/AI-demos/lua/grunt_rush_helper.lua"
                GRH.GRFLS1_bye()
            >>
        [/lua]
    [/event]

    # Everything below here is for debugging of the CAs
    # The preload event either doesn't do anything, or calls event 'debug_CA' below
    # to set up the right-click menu options, configure the sides etc.
    # depending on how debug_CA() in eval_exec_CA.lua is set up (and only ever does so in debug mode)
    [event]
        name=preload
        first_time_only=no

        [lua]
            code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".debug_CA()>>
        [/lua]
    [/event]

    # If we want to do CA debugging, this event is called at start of game and after a reload
    [event]
        name=debug_CA
        first_time_only=no

        {MESSAGE narrator "wesnoth-icon.png" "Candidate Action Debugging Mode" _"You are entering CA debugging mode.  Check out the AI Demos github wiki about information on how to use this mode, or how to deactivate it (and why in Wesnoth the game advances through 6 turns every time you use this mode)."}

        # Fred's side needs to play through at least one turn in AI mode, so that the ai table is initialized
        # We will actually make the game go through 6 turns below, so that we're back to same TOD afterward
        # and we make the side idle by deleting all the CAs
        # Also, so that things work under all circumstances, this needs to be done for both sides
        [modify_side]
            side=1,2
            controller=ai
        [/modify_side]
        [modify_ai]
            side=1
            action=delete
            path = "stage[main_loop].candidate_action[*]"
        [/modify_ai]
        [modify_ai]
            side=2
            action=delete
            path = "stage[main_loop].candidate_action[*]"
        [/modify_ai]

        # Set up the right-click menu items
        [set_menu_item]
            id=m00_reset_vars
            description=_"Reset variables to beginning of turn state"
            image=items/ring-white.png~CROP(26,26,20,20)
            [command]
                [lua]
                    code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".reset_vars()>>
                [/lua]
            [/command]
        [/set_menu_item]

        [set_menu_item]
            id=m01_eval
            description=_"Evaluate Single Candidate Action"
            image=items/ring-red.png~CROP(26,26,20,20)
            [command]
                [lua]
                    code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".eval_CA()>>
                [/lua]
            [/command]
        [/set_menu_item]

        [set_menu_item]
            id=m02_exec
            description=_"Evaluate and Execute Single Candidate Action"
            image=items/ring-gold.png~CROP(26,26,20,20)
            [command]
                [lua]
                    code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".eval_exec_CA(ai_global)>>
                [/lua]
            [/command]
        [/set_menu_item]

        [set_menu_item]
            id=m03_choose_ca
            description=_"Choose Candidate Action (default: recruit_orcs)"
            image=items/ring-silver.png~CROP(26,26,20,20)
            [command]
                [lua]
                    code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".choose_CA()>>
                [/lua]
            [/command]
        [/set_menu_item]

        [set_menu_item]
            id=m04_highest_score_CA
            description=_"Find highest scoring CA (and auto-select it)"
            image=items/ring-brown.png~CROP(26,26,20,20)
           [command]
                [lua]
                    code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".highest_score_CA()>>
                [/lua]
            [/command]
        [/set_menu_item]

        [set_menu_item]
            id=m05_kill_unit
            description=_"Kill Unit under Cursor"
            image=items/potion-poison.png~CROP(24,29,24,24)
            [command]
                [kill]
                    x,y=$x1,$y1
                [/kill]
            [/command]
        [/set_menu_item]

        # Gold income will still change and rest healing will take place, while the AIs go through the 6 idle turns
        # -> store gold and units at beginning, and reset them later
        [store_gold]
            side=1
            variable=stored_gold_1
        [/store_gold]
        [store_gold]
            side=2
            variable=stored_gold_2
        [/store_gold]

        # Store all units
        [store_unit]
            [filter]
            [/filter]
            variable=stored_units
        [/store_unit]
        # Then we kill all units except the leaders to speed things up as we go through the 6 turns
        [kill]
            canrecruit=no
        [/kill]

        # We also need to set variables containing the side number and the
        # turn number for when to restart things
        # This needs to be done once the first side turn has started
        # (or ended, depending on when the game was saved)
        [event]
            name=side turn,side turn end

            {VARIABLE stop_turn "$($turn_number+6)"}
            {VARIABLE stop_side $side_number}
        [/event]

        # And finally, the events that reset everything after 6 turns have passed
        [event]
            name=new turn
            first_time_only=no

            # If this is the turn on which we want to get control back
            [if]
                {VARIABLE_CONDITIONAL turn_number equals $stop_turn}
                [then]
                    # First turn the side for which we first need control back to human controller
                    [modify_side]
                        side=$stop_side
                        controller=human
                    [/modify_side]

                    # Then, when that side takes control, we set everything back to how it is supposed to be
                    [event]
                        name=turn refresh
                        first_time_only=no

                        [if]
                            {VARIABLE_CONDITIONAL turn_number equals $stop_turn}
                            {VARIABLE_CONDITIONAL side_number equals $stop_side}
                            [then]
                                # Give control of both sides to human
                                [modify_side]
                                    side=1,2
                                    controller=human
                                [/modify_side]

                                # Reset gold and units to where they were at start or directly after reload
                                # Kill the leaders too, first, then restore all units
                                [kill]
                                [/kill]
                                {FOREACH stored_units unstore_i}
                                    [unstore_unit]
                                        variable=stored_units[$unstore_i]
                                    [/unstore_unit]
                                {NEXT unstore_i}

                                # Restore gold amounts
                                [store_gold]
                                    side=1
                                [/store_gold]
                                [gold]
                                    side=1
                                    amount="$($stored_gold_1-$gold)"
                                [/gold]
                                [store_gold]
                                    side=2
                                [/store_gold]
                                [gold]
                                    side=2
                                    amount="$($stored_gold_2-$gold)"
                                [/gold]
                                {CLEAR_VARIABLE stored_gold_1,stored_gold_2,gold,stored_units,stored_leader,stop_turn,stop_side}
                            [/then]
                        [/if]
                    [/event]
                [/then]
            [/if]
        [/event]
    [/event]
[/era]

[era]
    id=AI_Demos_parms
    name= _ "Default+Experimental AI (adjustable parameters)"

    {~add-ons/AI-demos/ais/ai_grunt-rush-Freelands-S1.cfg}
    {RANDOM_SIDE}
    {multiplayer/factions/loyalists-default.cfg}
    {multiplayer/factions/rebels-default.cfg}
    {multiplayer/factions/northerners-default.cfg}
    {multiplayer/factions/undead-default.cfg}
    {multiplayer/factions/knalgans-default.cfg}
    {multiplayer/factions/drakes-default.cfg}
    {QUICK_4MP_LEADERS}

    # Some events to be fired from within the AI's
    # Set some variables at beginning that will affect aI behavior later
    # For Grunt Rush on Freelands Side 1 AI only
    [event]
        name=start

        {CLEAR_VARIABLE leave_own_villages}

        [message]
            message=_"Before we start, you can change some of the AI parameters to modify how the AI plays.  This is for AI development purposes and only works with the 'Grunt Rush on Freelands (Side 1)' AI.
At the moment, only one parameter is adjustable.  More will be added soon."
            speaker=narrator
            image=wesnoth-icon.png
            [option]
                message=_"Hold villages already owned by the AI when enemy is close (default)"
                [command]
                [/command]
            [/option]
            [option]
                message=_"Don't necessarily stay on those villages"
                [command]
                    {VARIABLE leave_own_villages yes}
                [/command]
            [/option]
        [/message]

        [lua]
            code = <<
                local GRH = wesnoth.require "~/add-ons/AI-demos/lua/grunt_rush_helper.lua"
                GRH.GRFLS1_hello()
            >>
        [/lua]
    [/event]

    [event]
        name=die
        [filter]
            canrecruit=yes
        [/filter]

        [lua]
            code = <<
                local GRH = wesnoth.require "~/add-ons/AI-demos/lua/grunt_rush_helper.lua"
                GRH.GRFLS1_bye()
            >>
        [/lua]
    [/event]
[/era]
