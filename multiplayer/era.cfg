[era]
    id=AI_Demos
    name= _ "Default+Experimental AI"

    {~add-ons/AI-demos/ais/ai_generic-rush.cfg}
    {~add-ons/AI-demos/ais/ai_grunt-rush-Freelands-S1.cfg}
    {~add-ons/AI-demos/ais/ml_ai.cfg}
    {~add-ons/AI-demos/ais/ml_ai_less_random.cfg}
    {~add-ons/AI-demos/ais/ml_ai_rush.cfg}
    {RANDOM_SIDE}
    {multiplayer/factions/loyalists-default.cfg}
    {multiplayer/factions/rebels-default.cfg}
    {multiplayer/factions/northerners-default.cfg}
    {multiplayer/factions/undead-default.cfg}
    {multiplayer/factions/knalgans-default.cfg}
    {multiplayer/factions/drakes-default.cfg}
    {QUICK_4MP_LEADERS}

    # Some events to be fired from within the AI's
    [event]
        name=start

        # Set this for all games, so that it can be retrieved later from savegames
        {VARIABLE AI_Demos_version "{~/add-ons/AI-demos/version.txt}"}
        [lua]
            code = <<
                local GRH = wesnoth.require "~/add-ons/AI-demos/lua/grunt_rush_helper.lua"
                GRH.GRFLS1_hello()
            >>
        [/lua]
    [/event]

    [event]
        name=die
        [filter]
            canrecruit=yes
        [/filter]

        [lua]
            code = <<
                local GRH = wesnoth.require "~/add-ons/AI-demos/lua/grunt_rush_helper.lua"
                GRH.GRFLS1_bye()
            >>
        [/lua]
    [/event]

    # Everything below here is for debugging of the CAs
    # The preload event either doesn't do anything, or calls event 'debug_CA' below
    # to set up the right-click menu options, configure the sides etc.
    # depending on how debug_CA() in eval_exec_CA.lua is set up (and only ever does so in debug mode)
    [event]
        name=preload
        first_time_only=no

        [lua]
            code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".debug_CA()>>
        [/lua]
    [/event]

    # If we want to do CA debugging, this event is called at start of game and after a reload
    [event]
        name=debug_CA
        first_time_only=no

        # We first want to reset the 'self.data' variable clone at the beginning of each turn
        [event]
            name=side 1 turn
            first_time_only=no

            [lua]
                code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".reset_vars(true)>>
            [/lua]
        [/event]

        {MESSAGE narrator "wesnoth-icon.png" "Candidate Action Debugging Mode" _"You are entering CA debugging mode.  Check out the AI Demos github wiki about information on how to use this mode, or how to deactivate it (and why the game needs to play through a turn first every time you use this mode)."}

        # Fred's side needs to play through at least one turn in AI mode, so that the ai table is initialized
        # We also make the side idle by deleting all the CAs
        # Also, so that things work under all circumstances, this needs to be done for both sides
        [modify_side]
            side=1,2
            controller=ai
        [/modify_side]
        [modify_ai]
            side=1
            action=delete
            path = "stage[main_loop].candidate_action[*]"
        [/modify_ai]
        [modify_ai]
            side=2
            action=delete
            path = "stage[main_loop].candidate_action[*]"
        [/modify_ai]

        # Set up the right-click menu items
        # First, two events to be fired from the menus (because I could not figure out how to code this in lua)
        [event]
            name=eval_CA
            first_time_only=no

            [lua]
                code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".eval_CA()>>
            [/lua]
        [/event]

        [event]
            name=exec_CA
            first_time_only=no

            [lua]
                code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".eval_exec_CA(ai_global)>>
            [/lua]
        [/event]

        # This sets up the first two menu items (with changeable text)
        [lua]
            code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".set_menus()>>
        [/lua]

        [set_menu_item]
            id=m03_choose_ca
            description=_"Choose Candidate Action"
            image=items/ring-silver.png~CROP(26,26,20,20)
            [command]
                [lua]
                    code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".choose_CA()>>
                [/lua]
            [/command]
        [/set_menu_item]

        [set_menu_item]
            id=m04_highest_score_CA
            description=_"Find highest scoring CA (and auto-select it)"
            image=items/ring-brown.png~CROP(26,26,20,20)
            [command]
                [lua]
                    code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".highest_score_CA()>>
                [/lua]
            [/command]
        [/set_menu_item]

        [set_menu_item]
            id=m05_play_turn
            description=_"Play an entire AI turn"
            image=items/ring-white.png~CROP(26,26,20,20)
            [command]
                [lua]
                    code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".play_turn(ai_global)>>
                [/lua]
            [/command]
        [/set_menu_item]

        [set_menu_item]
            id=m06_kill_unit
            description=_"Kill Unit under Cursor"
            image=items/potion-poison.png~CROP(24,29,24,24)
            [command]
                [kill]
                    x,y=$x1,$y1
                [/kill]
            [/command]
        [/set_menu_item]

        [set_menu_item]
            id=m07_reset_vars
            description=_"Reset or display 'self.data' table"
            image=items/ring-white.png~CROP(26,26,20,20)
            [command]
                [message]
                    speaker=narrator
                    image=wesnoth-icon.png
                    caption=_"Choose the Action"
                    message=_"Do you want to reset the 'self.data' table or show its current content"
                    [option]
                        message=_"Reset 'self.data' table to beginning-of-turn state"
                        [command]
                            [lua]
                                code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".reset_vars()>>
                            [/lua]
                        [/command]
                    [/option]
                    [option]
                        message=_"Show content of 'self.data' table"
                        [command]
                            [lua]
                                code=<<wesnoth.dofile "~add-ons/AI-demos/lua/eval_exec_CA.lua".show_vars()>>
                            [/lua]
                        [/command]
                    [/option]
                [/message]
            [/command]
        [/set_menu_item]

        # Gold income will still change and rest healing will take place, while the AIs go through the 6 idle turns
        # -> store gold and units at beginning, and reset them later
        [store_gold]
            side=1
            variable=stored_gold_1
        [/store_gold]
        [store_gold]
            side=2
            variable=stored_gold_2
        [/store_gold]

        # Store all units
        [store_unit]
            [filter]
            [/filter]
            variable=stored_units
        [/store_unit]
        # Then we kill all units except the leaders to speed things up as we go through the 6 turns
        [kill]
            canrecruit=no
        [/kill]

        # We also need to set variables containing the side number and the
        # turn number for when to restart things
        # This needs to be done once the first side turn has started
        # (or ended, depending on when the game was saved)
        [event]
            name=side turn,side turn end

            {VARIABLE stop_turn "$($turn_number+1)"}
            {VARIABLE current_turn $turn_number}
            {VARIABLE stop_side $side_number}
        [/event]

        # And finally, the events that go through a turn, and reset values (incl. the turn number)
        [event]
            name=new turn
            first_time_only=no

            # If this is the turn on which we want to get control back
            [if]
                {VARIABLE_CONDITIONAL turn_number equals $stop_turn}
                [then]
                    # First turn the side for which we first need control back to human controller
                    [modify_side]
                        side=$stop_side
                        controller=human
                    [/modify_side]

                    # Then, when that side takes control, we set everything back to how it is supposed to be
                    [event]
                        name=turn refresh
                        first_time_only=no

                        [if]
                            {VARIABLE_CONDITIONAL turn_number equals $stop_turn}
                            {VARIABLE_CONDITIONAL side_number equals $stop_side}
                            [then]
                                # Give control of both sides to human
                                [modify_side]
                                    side=1,2
                                    controller=human
                                [/modify_side]

                                # Reset gold and units to where they were at start or directly after reload
                                # Kill the leaders too, first, then restore all units
                                [kill]
                                [/kill]
                                {FOREACH stored_units unstore_i}
                                    [unstore_unit]
                                        variable=stored_units[$unstore_i]
                                    [/unstore_unit]
                                {NEXT unstore_i}

                                # Restore gold amounts
                                [store_gold]
                                    side=1
                                [/store_gold]
                                [gold]
                                    side=1
                                    amount="$($stored_gold_1-$gold)"
                                [/gold]
                                [store_gold]
                                    side=2
                                [/store_gold]
                                [gold]
                                    side=2
                                    amount="$($stored_gold_2-$gold)"
                                [/gold]
                                [modify_turns]
                                    current=$current_turn
                                [/modify_turns]
                                {CLEAR_VARIABLE stored_gold_1,stored_gold_2,gold,stored_units,stored_leader,stop_turn,stop_side,current_turn}
                            [/then]
                        [/if]
                    [/event]
                [/then]
            [/if]
        [/event]
    [/event]
[/era]
