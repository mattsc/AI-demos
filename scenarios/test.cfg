#textdomain wesnoth-AI-demos

[scenario]
    id=test
    name=_"test"
    next_scenario=micro_ai_test

    #map_data="{~add-ons/AI-demos/maps/dragon.map}"
    #map_data="{multiplayer/maps/2p_The_Freelands.map}"
    map_data="{multiplayer/maps/2p_Den_of_Onis.map}"

    {DEFAULT_SCHEDULE}
    turns=50
    victory_when_enemies_defeated=no

    [side]
        side=1
        controller=ai
        id=Vanak
        name=Vanak
        type=Orcish Ruler
        persistent=no

        team_name=Vanak
        user_team_name=_"Vanak"

        recruit=Orcish Grunt,Orcish Archer,Orcish Assassin,Wolf Rider,Troll Whelp
        gold=0

        {ai/aliases/stable_singleplayer.cfg}
        [ai]
            id=luaAI-test
            name=_"Lua AI Test"
            version=10710
            [engine]
                name="lua"
                code= <<
                    ai = ...
                    local my_ai = {}
                    local ai_stdlib = wesnoth.require('ai/lua/stdlib.lua');
                    ai_stdlib.init(ai, true)
                    return my_ai
                >>
            [/engine]
        [/ai]
        ################## Or use external CA ##########################
        #[ai]
        #    version=10710
        #    [stage]
        #        id=main_loop
        #        name=testing_ai_default::candidate_action_evaluation_loop
        #        [candidate_action]
        #            engine=lua
        #            name=external_example
        #            location="~/add-ons/LuaAI_tests/ext_test.lua"
        #        [/candidate_action]
        #    [/stage]
        #[/ai]
    [/side]

    [side]
        side=2
        controller=ai
        id=Bad Orc
        type=Orcish Ruler
        persistent=no

        team_name=Orcs
        user_team_name=_"Orcs"

        recruit=Orcish Grunt,Orcish Archer,Orcish Assassin,Wolf Rider,Troll Whelp
        gold=0

        #[ai]
        #    version=10710
        #    [engine]
        #        name="lua"
        #        code= <<
        #            local ai = ...
        #            return wesnoth.require("~add-ons/AI-demos/lua/test_engine.lua").init(ai)
        #        >>
        #    [/engine]
        #    {RCA_STAGE}
        #    {MODIFY_AI_ADD_CANDIDATE_ACTION 2 main_loop (
        #        [candidate_action]
        #            engine=lua
        #            name=test
        #            id=test
        #            max_score=9999999
        #            evaluation="return (...):test_eval()"
        #            execution="(...):test_exec()"
        #        [/candidate_action]
        #    )}
        #[/ai]
    [/side]

    [event]
        name=prestart

        {VARIABLE scenario_name test}

        [set_menu_item]
            id = m01
            description=_"Reload Lua code"
            image=items/ring-red.png~CROP(26,26,20,20)
            [command]
                [lua]
                    code=<<wesnoth.dofile "~add-ons/AI-demos/lua/test_lua.lua">>
                [/lua]
            [/command]
        [/set_menu_item]

        [set_menu_item]
            id=m06_kill_unit
            description=_"Kill Unit under Cursor"
            image=items/potion-poison.png~CROP(24,29,24,24)
            [command]
                [kill]
                    x,y=$x1,$y1
                [/kill]
            [/command]
        [/set_menu_item]
    [/event]

    # Keep leaders in place for this first turn
    # Cannot do first_time_only=yes and do both sides together, because we reset the turn number after this
    [event]
        name=side 1 turn 1 refresh

        {MODIFY_UNIT side=1 moves 0}
    [/event]
    [event]
        name=side 2 turn 1 refresh

        {MODIFY_UNIT side=2 moves 0}
    [/event]

    # Reset the turn number after this initialization turn
    # And put a couple archers out there
    [event]
        name=turn 2

        [modify_turns]
            current=1
        [/modify_turns]

        {UNIT 1 "Orcish Archer" 19 6 ()}

        {REPEAT 4
            {UNIT 2 "Orcish Archer" 18 8 ()}
        }
    [/event]

    # Turn Side 1 control over to human after first turn
    [event]
        name=turn 1 end

        [modify_side]
            side=1
            controller=human
        [/modify_side]
        [modify_side]
            side=2
            controller=ai
        [/modify_side]
    [/event]
[/scenario]
